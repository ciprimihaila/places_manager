<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- POM file generated with GWT webAppCreator -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.placesmanager</groupId>
  <artifactId>PlacesMangerApp</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>com.placesmanager.PlacesMangerApp</name>
  
  <properties>
    <!-- Convenience property to set the GWT version -->
    <gwtVersion>2.7.0</gwtVersion>
    <!-- Note: GWT needs at least java 1.6 -->
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- ensure all GWT deps use the same version (unless overridden) -->
      <dependency>
        <groupId>com.google.gwt</groupId>
        <artifactId>gwt</artifactId>
        <version>${gwtVersion}</version>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <scope>runtime</scope>
      <version>${gwtVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
      <version>${gwtVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <scope>provided</scope>
      <version>${gwtVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-codeserver</artifactId>
      <scope>provided</scope>
      <version>${gwtVersion}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Jersey dependencies -->
    <dependency>
	    <groupId>javax.ws.rs</groupId>
	    <artifactId>javax.ws.rs-api</artifactId>
	    <version>2.0</version>
	</dependency>
	
	<dependency>
	    <groupId>org.glassfish.jersey.containers</groupId>
	    <!-- if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core"  -->
	    <artifactId>jersey-container-servlet-core</artifactId>
	    <version>2.7</version>
	</dependency>
	
	<dependency>
	    <groupId>org.glassfish.jersey.media</groupId>
	    <artifactId>jersey-media-json-jackson</artifactId>
	    <version>2.7</version>
	</dependency>
	<dependency>
	    <groupId>com.fasterxml.jackson.jaxrs</groupId>
	    <artifactId>jackson-jaxrs-json-provider</artifactId>
	    <version>2.3.2</version>
	</dependency>
	
	<dependency>
	    <groupId>org.fusesource.restygwt</groupId>
	    <artifactId>restygwt</artifactId>
	    <version>1.4</version>
	</dependency>
    
    <!-- Google places lib -->
    <dependency>
	    <groupId>com.google.maps</groupId>
	    <artifactId>google-maps-services</artifactId>
	    <version>0.1.21</version>
	</dependency>
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-nop</artifactId>
	    <version>1.7.25</version>
	</dependency>
    
    <!-- database -->
   <dependency>
	    <groupId>postgresql</groupId>
	    <artifactId>postgresql</artifactId>
	    <version>9.1-901.jdbc4</version>
	</dependency>

    
    <dependency>
	    <groupId>org.hibernate.javax.persistence</groupId>
	    <artifactId>hibernate-jpa-2.0-api</artifactId>
	    <version>1.0.1.Final</version>
	</dependency>
	
	 <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.2.8.Final</version>
     </dependency>
     
     <!-- guice DI -->
	<dependency>
	  <groupId>com.google.inject</groupId>
	  <artifactId>guice</artifactId>
	  <version>4.0</version>
	</dependency>
	    
	<dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-servlet</artifactId>
        <version>4.0</version>
    </dependency>
    
    <dependency>
        <groupId>com.squarespace.jersey2-guice</groupId>
        <artifactId>jersey2-guice</artifactId>
        <version>0.10</version>
    </dependency>    
    
    <!-- gmaps -->
    
  </dependencies>
  
  <build>
    
    <plugins>
      
      <!-- GWT Maven Plugin-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${gwtVersion}</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <!-- Run tests through gwt:test, this allows reusing the plugin configuration for GWTTestCases -->
            <id>gwt-tests</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <!-- Plugin configuration. There are many available options, 
             see gwt-maven-plugin documentation at codehaus.org --> 
        <configuration>
          <modules>
            <module>com.placesmanager.PlacesMangerApp</module>
          </modules>
          <!-- URL that should be opened by DevMode (gwt:run). -->
          <runTarget>PlacesMangerApp.html</runTarget>
          <!-- Ask GWT to create the Story of Your Compile (SOYC) (gwt:compile) -->
          <compileReport>true</compileReport>
          <!-- Run tests using HtmlUnit -->
          <mode>htmlunit</mode>
          <!-- Tests patterns -->
          <includes>**/Test*.java,**/*Test.java,**/*TestCase.java</includes>
        </configuration>
      </plugin>

      <!-- Skip normal test execution, we use gwt:test instead -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!-- NOTE: this is only needed if you use "mvn eclipse:eclipse". -->
      <!-- You can remove this plugin if you intend to only use the Maven integration in Eclipse, or another IDE -->
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.7</version>  <!--  Note 2.8 does not work with AspectJ aspect path -->
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>false</downloadJavadocs>
          <wtpversion>2.0</wtpversion>
          <additionalBuildcommands>
            <buildCommand>
              <name>com.google.gwt.eclipse.core.gwtProjectValidator</name>
            </buildCommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>com.google.gwt.eclipse.core.gwtNature</projectnature>
          </additionalProjectnatures>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
